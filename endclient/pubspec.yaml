name: esys_client
description: Endurance event management
publish_to: 'none'
version: 1.0.0+1

environment:
  sdk: '^3.0.0'

dependencies:
  flutter:
    sdk: flutter
  common:
    path: ../common

  # convenience
  provider: ^6.0.4
  package_info_plus: ^3.1.2  

  # ui
  animations: ^2.0.5
  numberpicker: ^2.1.2
  flutter_treeview: ^1.0.7
  # flutter_spinkit: ^5.1.0
  # bottom_drawer: ^0.0.5
  # marquee: ^2.2.3

  # p2p
  location: ^5.0.3
  permission_handler: ^11.0.0
  # flutter_nearby_connections: ^1.1.1
  # nearby_connections: ^4.0.1

  # persistence
  shared_preferences: ^2.0.15
  sqflite: ^2.2.8+4
  sqflite_common_ffi: ^2.2.5

  # other
  wakelock: ^0.6.2
  mutex: ^3.0.1
  flutter_native_splash: ^2.3.8
  locally: ^1.0.5
  path_provider: ^2.1.0
  path: ^1.8.2
  url_launcher: ^6.1.11
  socket_io_client: ^1.0.0
  carousel_slider: ^4.2.1
  

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^2.0.0
  flutter_launcher_icons: ^0.12.0

flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/logo.png"

flutter:
  assets:
    - assets/
  uses-material-design: true
  fonts:
    - family: MyIcons
      fonts:
        - asset: fonts/MyIcons.ttf

flutter_native_splash:
  # Rerun with `flutter pub run flutter_native_splash:create`
  color: "#625573"
  #background_image: "assets/background.png"

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  #image: assets/splash.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/dart.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  # Android 12 handles the splash screen differently than previous versions.  Please visit
  # https://developer.android.com/guide/topics/ui/splash-screen
  # Following are Android 12 specific parameter.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 640 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    #image: assets/android12splash.png

    # Splash screen background color.
    #color: "#42a5f5"

    # App icon background color.
    #icon_background_color: "#111111"

    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/dart.png

    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plis
